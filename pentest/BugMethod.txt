jhaddics : "bug hunter methodology v 4"

prezentaja metodologie mozna podzielic na:

methodology :
	1) recon 
	2) aplication analysis



1) recon:
	- track progress ,  use xmind - to mindmap . method to track work in exel or in sth like mindmap ...  when do project , bug bounty use mind map or excell
		(Project tesla - set domains etc)
	- mission :  
			- scope domains
			- acquisitions
			- asn enumeration
			- reverse whois
			- subdomains enumerations
			- port analysis
			- other :
				- vulns: 		
					- subdomains takeover
					- buckets 
					- github leaks
				- automation/helper:
					- interlace
					- screenshotting 
					- frameworks

-------------------------------------------------------------------------------------------------------	
	Finding seeds/ roots (roots domains)
	search  "*.tesla.com" or "*.tesla.cx" 

	understand company : use "www.crunchbase.com"  to search info about company.  you can use api to automate in scripts. you can use wikipedia or google 

	
	ans enumeratoin:
		http:bgp.he.net   - get ip address they have . not compleat pictre but help
	automation asn eunm (you can get false postive from pages not connected to the aim , etc you can get other companys with tesla in name ):
		kali# python asnlookup.py -o tesla 
		kali# echo 'tesla' | metabigor net --org -v 
	For discovering more seend domains we want to scan the whole ASN with a port scanner ans return any root domains we see in SSL certificates (can use Amass intall )
		#amass intel -asn 46489        # 46489 from  http:bgp.he.nete  searching twich (46489 - asn number)

		
	reverse whois (whoxy.com)	
	reverse whois (DOMLink)			

		
	ad/analytics relationships (builswith.com) - related domains and subdomains. 
	
	google-Hu - copyright text ,  terms of sevice test , privace pocy text.

	shodan  - write in shodan: twitch.tx or tesla.com ...


-------------------------------------------------------------------------------------------------------		
	Finding subdomains:
		subdomain enumeration:
			a) linked and js discovery 
			b) subdomain scraping 
			c) subdomain bruteforce	


			a) linked and js discovery (use burp suit pro) -  visit page and burp pro will take some linkes. 
				or goSpider or hakrawler	 (linked discovery)
			subdomen enumeration with subDomainizer, analyzing javascrpit. will visit page and go to their subdomain. 
			subscraper - with recursion
	
			(35 min from begin - 1:05 min to end)						
				
					
			b) subdomain scraping - many sites lie censys  , netcraft, google etc...
				google: site twitch.tv -www.twich.tv
	 

				Amass tool - recon, for scraping domains data.


				subfinder v2  - is another best in breed tool 

				github-subdomains.py  -   # python3 ginthub-subdomains.py -t "your_token" -d twitch.tv > twich.tv    - use it 5-6 times and  have some sleeps beetwean

				Shosubgo - parser for shodan , command line tool 

				inc0byt3  - effective and reliable for this method. 

			
				curl 'http://tls.bufferover.run/dns?1=.twitch.tv' 2>dev/null | s .Result     - this scan active 

			
			c) subdomain bruteforce   -  trying to guess domains 
				amass enum -brute -d twitch.tv -src 
				amass enum -brute -d twitch.tv -rf resolvers.txt -w bruteforce.list

				shuffldns -d hackorone.com -w words.txt -r resolver-excelent.txt
				a multi resolver is only as good as it's wordlist, find good new lists for subdomains bruteforce 


			d) alteration scanning  - naming pattern ina these subdomains . for insatance you can find www2$target.com='('  and can have sqlinjection


-------------------------------------------------------------------------------------------------------									
	Others:

		a) port analysis:
			masscan -p1-65535 -iL $ipFile --max-rate 18000 -oG $outPutFile.log   - masscan is fast , faster then nmap. it scans ip's (not dns)


			dnmasscan example.txt dns.log -p80,443 -oG masscan.log         - can scan domains				
			
			
		b) brutespary - get ftp, ssh and log using defaoult passwords in all protocols. This tool is for chack	
			masscan  ->    Nmap service scan -oG    ->   Brutespray credential bruteforce  

		c) github dorking (manual)   -   many sensitive datas in repos in git 
  

		d)  screenshotting (eyewintess, aquatone, httpscreenshot)  - do it manualy to look how websites look like. You have many domains, look what is inside.

		e) subdomain takeover (can i take over xyz) - if subdomain is pointing to a service that has been removed or deleted.

		
		
-------------------------------------------------------------------------------------------------------											
	Automation++
		example (only one thread):

			while read line; do
				nikto --host $line > ./$line-nikot.txt;
			done < targets.txt


		many nic tools on github .... for recon ... dome frameworks etc 


 